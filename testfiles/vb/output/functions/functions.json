{"vb.functions":{"pos":1,"text":"' Code from Microsoft's Visual Basic tutorial.\n\n' Allow easy reference to the System namespace classes.\nImports sys = System.test\n\n' This module houses the application's entry point.\nPublic Module modmain\n   ' Main is the application's entry point.\n   Sub Main()\n     ' Write text to the console.\n     Console.WriteLine (\"Hello World using Visual Basic!\")\n   End Sub\n\n    Sub tellOperator(ByVal task As String)\n        Dim stamp As Date\n        stamp = TimeOfDay()\n        MsgBox(\"Starting \" & task & \" at \" & CStr(stamp))\n    End Sub\nEnd Module\n\nFunction yesterday() As Date  \nEnd Function  \n  \nFunction findSqrt(ByVal radicand As Single) As Single  \nEnd Function \n\nFunction hypotenuse(ByVal side1 As Single, ByVal side2 As Single) As Single\n\tReturn Math.Sqrt((side1 ^ 2) + (side2 ^ 2))\nEnd Function\n\n\n","subs":[{"vb.function":{"pos":253,"text":"Sub Main()\n     ' Write text to the console.\n     Console.WriteLine (\"Hello World using Visual Basic!\")\n   End Sub","subs":[{"vb.funcdef":{"pos":253,"text":"Sub Main()\n     ","subs":[{"vb.funcname":{"pos":257,"text":"Main"}}]}},{"vb.funcbody":{"pos":269,"text":"' Write text to the console.\n     Console.WriteLine (\"Hello World using Visual Basic!\")\n   "}}]}},{"vb.function":{"pos":373,"text":"Sub tellOperator(ByVal task As String)\n        Dim stamp As Date\n        stamp = TimeOfDay()\n        MsgBox(\"Starting \" & task & \" at \" & CStr(stamp))\n    End Sub","subs":[{"vb.funcdef":{"pos":373,"text":"Sub tellOperator(ByVal task As String)\n        ","subs":[{"vb.funcname":{"pos":377,"text":"tellOperator"}},{"vb.paramlist":{"pos":390,"text":"ByVal task As String","subs":[{"vb.paramstmnt":{"pos":390,"text":"ByVal task As String","subs":[{"vb.param":{"pos":396,"text":"task"}},{"vb.datatype":{"pos":404,"text":"String"}}]}}]}}]}},{"vb.funcbody":{"pos":420,"text":"Dim stamp As Date\n        stamp = TimeOfDay()\n        MsgBox(\"Starting \" & task & \" at \" & CStr(stamp))\n    "}}]}},{"vb.function":{"pos":548,"text":"Function yesterday() As Date  \nEnd Function","subs":[{"vb.funcdef":{"pos":548,"text":"Function yesterday() As Date","subs":[{"vb.funcname":{"pos":557,"text":"yesterday"}},{"vb.datatype":{"pos":572,"text":"Date"}}]}},{"vb.funcbody":{"pos":576,"text":"  \n"}}]}},{"vb.function":{"pos":597,"text":"Function findSqrt(ByVal radicand As Single) As Single  \nEnd Function","subs":[{"vb.funcdef":{"pos":597,"text":"Function findSqrt(ByVal radicand As Single) As Single","subs":[{"vb.funcname":{"pos":606,"text":"findSqrt"}},{"vb.paramlist":{"pos":615,"text":"ByVal radicand As Single","subs":[{"vb.paramstmnt":{"pos":615,"text":"ByVal radicand As Single","subs":[{"vb.param":{"pos":621,"text":"radicand"}},{"vb.datatype":{"pos":633,"text":"Single"}}]}}]}},{"vb.datatype":{"pos":644,"text":"Single"}}]}},{"vb.funcbody":{"pos":650,"text":"  \n"}}]}},{"vb.function":{"pos":668,"text":"Function hypotenuse(ByVal side1 As Single, ByVal side2 As Single) As Single\n\tReturn Math.Sqrt((side1 ^ 2) + (side2 ^ 2))\nEnd Function","subs":[{"vb.funcdef":{"pos":668,"text":"Function hypotenuse(ByVal side1 As Single, ByVal side2 As Single) As Single","subs":[{"vb.funcname":{"pos":677,"text":"hypotenuse"}},{"vb.paramlist":{"pos":688,"text":"ByVal side1 As Single, ByVal side2 As Single","subs":[{"vb.paramstmnt":{"pos":688,"text":"ByVal side1 As Single","subs":[{"vb.param":{"pos":694,"text":"side1"}},{"vb.datatype":{"pos":703,"text":"Single"}}]}},{"vb.paramstmnt":{"pos":711,"text":"ByVal side2 As Single","subs":[{"vb.param":{"pos":717,"text":"side2"}},{"vb.datatype":{"pos":726,"text":"Single"}}]}}]}},{"vb.datatype":{"pos":737,"text":"Single"}}]}},{"vb.funcbody":{"pos":743,"text":"\n\tReturn Math.Sqrt((side1 ^ 2) + (side2 ^ 2))\n"}}]}}]}}
