{"vb.functions":{"text":"' Code from Microsoft's Visual Basic tutorial.\n\n' Allow easy reference to the System namespace classes.\nImports sys = System.test\n\n' This module houses the application's entry point.\nPublic Module modmain\n   ' Main is the application's entry point.\n   Sub Main()\n     ' Write text to the console.\n     Console.WriteLine (\"Hello World using Visual Basic!\")\n   End Sub\n\n    Sub tellOperator(ByVal task As String)\n        Dim stamp As Date\n        stamp = TimeOfDay()\n        MsgBox(\"Starting \" & task & \" at \" & CStr(stamp))\n    End Sub\nEnd Module\n\nFunction yesterday() As Date  \nEnd Function  \n  \nFunction findSqrt(ByVal radicand As Single) As Single  \nEnd Function \n\nFunction hypotenuse(ByVal side1 As Single, ByVal side2 As Single) As Single\n\tReturn Math.Sqrt((side1 ^ 2) + (side2 ^ 2))\nEnd Function\n\n\n","subs":[{"vb.function":{"text":"Sub Main()\n     ' Write text to the console.\n     Console.WriteLine (\"Hello World using Visual Basic!\")\n   End Sub","subs":[{"vb.funcdef":{"text":"Sub Main()\n     ","subs":[{"vb.funcname":{"text":"Main","pos":257}}],"pos":253}},{"vb.funcbody":{"text":"' Write text to the console.\n     Console.WriteLine (\"Hello World using Visual Basic!\")\n   ","pos":269}}],"pos":253}},{"vb.function":{"text":"Sub tellOperator(ByVal task As String)\n        Dim stamp As Date\n        stamp = TimeOfDay()\n        MsgBox(\"Starting \" & task & \" at \" & CStr(stamp))\n    End Sub","subs":[{"vb.funcdef":{"text":"Sub tellOperator(ByVal task As String)\n        ","subs":[{"vb.funcname":{"text":"tellOperator","pos":377}},{"vb.paramlist":{"text":"ByVal task As String","subs":[{"vb.paramstmnt":{"text":"ByVal task As String","subs":[{"vb.param":{"text":"task","pos":396}},{"vb.datatype":{"text":"String","pos":404}}],"pos":390}}],"pos":390}}],"pos":373}},{"vb.funcbody":{"text":"Dim stamp As Date\n        stamp = TimeOfDay()\n        MsgBox(\"Starting \" & task & \" at \" & CStr(stamp))\n    ","pos":420}}],"pos":373}},{"vb.function":{"text":"Function yesterday() As Date  \nEnd Function","subs":[{"vb.funcdef":{"text":"Function yesterday() As Date","subs":[{"vb.funcname":{"text":"yesterday","pos":557}},{"vb.datatype":{"text":"Date","pos":572}}],"pos":548}},{"vb.funcbody":{"text":"  \n","pos":576}}],"pos":548}},{"vb.function":{"text":"Function findSqrt(ByVal radicand As Single) As Single  \nEnd Function","subs":[{"vb.funcdef":{"text":"Function findSqrt(ByVal radicand As Single) As Single","subs":[{"vb.funcname":{"text":"findSqrt","pos":606}},{"vb.paramlist":{"text":"ByVal radicand As Single","subs":[{"vb.paramstmnt":{"text":"ByVal radicand As Single","subs":[{"vb.param":{"text":"radicand","pos":621}},{"vb.datatype":{"text":"Single","pos":633}}],"pos":615}}],"pos":615}},{"vb.datatype":{"text":"Single","pos":644}}],"pos":597}},{"vb.funcbody":{"text":"  \n","pos":650}}],"pos":597}},{"vb.function":{"text":"Function hypotenuse(ByVal side1 As Single, ByVal side2 As Single) As Single\n\tReturn Math.Sqrt((side1 ^ 2) + (side2 ^ 2))\nEnd Function","subs":[{"vb.funcdef":{"text":"Function hypotenuse(ByVal side1 As Single, ByVal side2 As Single) As Single","subs":[{"vb.funcname":{"text":"hypotenuse","pos":677}},{"vb.paramlist":{"text":"ByVal side1 As Single, ByVal side2 As Single","subs":[{"vb.paramstmnt":{"text":"ByVal side1 As Single","subs":[{"vb.param":{"text":"side1","pos":694}},{"vb.datatype":{"text":"Single","pos":703}}],"pos":688}},{"vb.paramstmnt":{"text":"ByVal side2 As Single","subs":[{"vb.param":{"text":"side2","pos":717}},{"vb.datatype":{"text":"Single","pos":726}}],"pos":711}}],"pos":688}},{"vb.datatype":{"text":"Single","pos":737}}],"pos":668}},{"vb.funcbody":{"text":"\n\tReturn Math.Sqrt((side1 ^ 2) + (side2 ^ 2))\n","pos":743}}],"pos":668}}],"pos":1}}
