{"b.line_comments":{"pos":1,"subs":[{"b.line_comment":{"pos":1,"subs":[{"b.line_comment_context":{"pos":1,"text":""}},{"b.line_comment_body":{"pos":1,"subs":[{"b.line_comment_text":{"pos":2,"text":"!\/bin\/bash -e"}}],"text":"#!\/bin\/bash -e"}}],"text":"#!\/bin\/bash -e"}},{"b.line_comment":{"pos":17,"subs":[{"b.line_comment_context":{"pos":17,"text":""}},{"b.line_comment_body":{"pos":17,"subs":[{"b.line_comment_text":{"pos":18,"text":"export WEAVE_URL=${WEAVE_URL:=\"https:\/\/raw.githubusercontent.com\/zettio\/weave\/master\/weaver\/weave\"}"}}],"text":"#export WEAVE_URL=${WEAVE_URL:=\"https:\/\/raw.githubusercontent.com\/zettio\/weave\/master\/weaver\/weave\"}"}}],"text":"#export WEAVE_URL=${WEAVE_URL:=\"https:\/\/raw.githubusercontent.com\/zettio\/weave\/master\/weaver\/weave\"}"}},{"b.line_comment":{"pos":323,"subs":[{"b.line_comment_context":{"pos":323,"text":""}},{"b.line_comment_body":{"pos":323,"subs":[{"b.line_comment_text":{"pos":324,"text":" stop any container that the output of docker ps matches against the"}}],"text":"# stop any container that the output of docker ps matches against the"}}],"text":"# stop any container that the output of docker ps matches against the"}},{"b.line_comment":{"pos":393,"subs":[{"b.line_comment_context":{"pos":393,"text":""}},{"b.line_comment_body":{"pos":393,"subs":[{"b.line_comment_text":{"pos":394,"text":" given grep pattern"}}],"text":"# given grep pattern"}}],"text":"# given grep pattern"}},{"b.line_comment":{"pos":523,"subs":[{"b.line_comment_context":{"pos":523,"text":""}},{"b.line_comment_body":{"pos":523,"subs":[{"b.line_comment_text":{"pos":524,"text":" start the etcd docker container"}}],"text":"# start the etcd docker container"}}],"text":"# start the etcd docker container"}},{"b.line_comment":{"pos":766,"subs":[{"b.line_comment_context":{"pos":766,"text":""}},{"b.line_comment_body":{"pos":766,"subs":[{"b.line_comment_text":{"pos":767,"text":" start the various kubernetes containers via the kyperkube"}}],"text":"# start the various kubernetes containers via the kyperkube"}}],"text":"# start the various kubernetes containers via the kyperkube"}},{"b.line_comment":{"pos":1175,"subs":[{"b.line_comment_context":{"pos":1175,"text":""}},{"b.line_comment_body":{"pos":1175,"subs":[{"b.line_comment_text":{"pos":1176,"text":" start the kubernetes proxy (we are running the kubelet on this node)"}}],"text":"# start the kubernetes proxy (we are running the kubelet on this node)"}}],"text":"# start the kubernetes proxy (we are running the kubelet on this node)"}},{"b.line_comment":{"pos":1433,"subs":[{"b.line_comment_context":{"pos":1433,"text":""}},{"b.line_comment_body":{"pos":1433,"subs":[{"b.line_comment_text":{"pos":1434,"text":" wrapper to start the whole stack"}}],"text":"# wrapper to start the whole stack"}}],"text":"# wrapper to start the whole stack"}},{"b.line_comment":{"pos":1521,"subs":[{"b.line_comment_context":{"pos":1521,"text":""}},{"b.line_comment_body":{"pos":1521,"subs":[{"b.line_comment_text":{"pos":1522,"text":" logic to remove only the jenca\/kubernetes containers"}}],"text":"# logic to remove only the jenca\/kubernetes containers"}}],"text":"# logic to remove only the jenca\/kubernetes containers"}},{"b.line_comment":{"pos":1914,"subs":[{"b.line_comment_context":{"pos":1914,"text":"\t"}},{"b.line_comment_body":{"pos":1915,"subs":[{"b.line_comment_text":{"pos":1916,"text":"docker rm -f INSERTNAMESHERE"}}],"text":"#docker rm -f INSERTNAMESHERE"}}],"text":"\t#docker rm -f INSERTNAMESHERE"}},{"b.line_comment":{"pos":1988,"subs":[{"b.line_comment_context":{"pos":1988,"text":""}},{"b.line_comment_body":{"pos":1988,"subs":[{"b.line_comment_text":{"pos":1989,"text":" this tool is designed for the user to have already sorted out what branch each repo"}}],"text":"# this tool is designed for the user to have already sorted out what branch each repo"}}],"text":"# this tool is designed for the user to have already sorted out what branch each repo"}},{"b.line_comment":{"pos":2074,"subs":[{"b.line_comment_context":{"pos":2074,"text":""}},{"b.line_comment_body":{"pos":2074,"subs":[{"b.line_comment_text":{"pos":2075,"text":" is on and have committed any changes etc"}}],"text":"# is on and have committed any changes etc"}}],"text":"# is on and have committed any changes etc"}}],"text":"#!\/bin\/bash -e\n\n#export WEAVE_URL=${WEAVE_URL:=\"https:\/\/raw.githubusercontent.com\/zettio\/weave\/master\/weaver\/weave\"}\nK8S_VERSION=1.1.1\n\nusage() {\ncat <<EOF\nUsage:\njencactl etcd\njencactl proxy\njencactl hyperkube\njencactl start\njencactl stop\njencactl restart\njencactl images\njencactl updatecode\njencactl help\nEOF\n\texit 1\n}\n\n# stop any container that the output of docker ps matches against the\n# given grep pattern\ngrepstop-container() {\n\tlocal pattern=$1\n\tdocker rm -f $(docker ps -a | grep $pattern | awk '{print $1}')\n}\n\n# start the etcd docker container\ncmd-etcd() {\n\tdocker run -d \\\n\t  --name etcd \\\n\t  --net host \\\n\t  kubernetes\/etcd:2.0.5.1 \\\n\t  \/usr\/local\/bin\/etcd \\\n\t  \t--addr=127.0.0.1:4001 \\\n\t  \t--bind-addr=0.0.0.0:4001 \\\n\t  \t--data-dir=\/var\/etcd\/data\n}\n\n# start the various kubernetes containers via the kyperkube\ncmd-hyperkube() {\n\tdocker run -d \\\n\t\t--net host \\\n\t\t-v \/var\/run\/docker.sock:\/var\/run\/docker.sock \\\n\t\tgcr.io\/google_containers\/hyperkube:v${K8S_VERSION} \\\n\t\t\/hyperkube kubelet \\\n\t\t\t--api_servers=http:\/\/localhost:8080 \\\n\t\t\t--v=2 \\\n\t\t\t--address=0.0.0.0 \\\n\t\t\t--enable_server \\\n\t\t\t--hostname_override=127.0.0.1 \\\n\t\t\t--config=\/etc\/kubernetes\/manifests\n}\n\n# start the kubernetes proxy (we are running the kubelet on this node)\ncmd-proxy() {\n\tdocker run -d \\\n\t\t--net host \\\n\t\t--privileged \\\n\t\tgcr.io\/google_containers\/hyperkube:v${K8S_VERSION} \\\n\t\t\/hyperkube proxy \\\n\t\t\t--master=http:\/\/127.0.0.1:8080 \\\n\t\t\t--v=2\n}\n\n# wrapper to start the whole stack\ncmd-start() {\n\tcmd-etcd\n\tcmd-hyperkube\n\tcmd-proxy\n}\n\n# logic to remove only the jenca\/kubernetes containers\ncmd-stop() {\n\tgrepstop-container k8s_scheduler || true\n\tgrepstop-container k8s_apiserver || true\n\tgrepstop-container k8s_controller-manager || true\n\tgrepstop-container k8s_controller-manager || true\n\tgrepstop-container k8s_POD || true\n\tgrepstop-container proxy || true\n\tgrepstop-container kubelet || true\n\tgrepstop-container etcd\t|| true\n\t#docker rm -f INSERTNAMESHERE\n}\n\ncmd-restart() {\n\tcmd-stop\n\tcmd-start\n}\n\n# this tool is designed for the user to have already sorted out what branch each repo\n# is on and have committed any changes etc\ncmd-updatecode-repo() {\n\tlocal repo=$1;\n\n\tif [[ ! -d \"\/vagrant\/repos\/${repo}\" ]]; then\n\t\techo \"cloning $repo\"\n\t\tmkdir -p \/vagrant\/repos\n\t\tcd \/vagrant\/repos && git clone \"git@github.com:jenca-cloud\/${repo}.git\"\n\tfi\n\n\tcd \/vagrant\/repos\/${repo} && git pull\n}\n\ncmd-updatecode() {\n\tcmd-updatecode-repo jenca-authorization\n\tcmd-updatecode-repo jenca-authentication\n\tcmd-updatecode-repo jenca-runtime\n\tcmd-updatecode-repo jenca-projects\n\tcmd-updatecode-repo jenca-library\n\tcmd-updatecode-repo jenca-router\n\tcmd-updatecode-repo jenca-gui\n\tcmd-updatecode-repo jenca-level-storage\n}\n\ncmd-build-image() {\n\tlocal repo=$1;\n\tcd \/vagrant\/repos\/${repo} && make images\n}\n\ncmd-run-tests() {\n\tlocal repo=$1;\n\tcd \/vagrant\/repos\/${repo} && make test\n}\n\ncmd-images() {\n\tcmd-build-image jenca-authentication\n\tcmd-build-image jenca-authorization\n\tcmd-build-image jenca-projects\n\tcmd-build-image jenca-router\n\tcmd-build-image jenca-gui\n\tcmd-build-image jenca-level-storage\n\tcmd-build-image jenca-library\n}\n\ncmd-test() {\n\tcmd-run-tests jenca-authentication\n\tcmd-run-tests jenca-authorization\n\tcmd-run-tests jenca-projects\n\tcmd-run-tests jenca-router\n\tcmd-run-tests jenca-gui\n\tcmd-run-tests jenca-level-storage\n\tcmd-run-tests jenca-library\n}\n\nmain() {\n\tcase \"$1\" in\n\tetcd)\t\t\t\t\t        shift; cmd-etcd; $@;;\n\thyperkube)\t\t\t\t\t  shift; cmd-hyperkube; $@;;\n\tproxy)\t\t\t\t\t      shift; cmd-proxy; $@;;\n\tstart)\t\t\t\t\t      shift; cmd-start; $@;;\n\tstop)\t\t\t\t\t        shift; cmd-stop; $@;;\n\trestart)\t\t\t\t\t    shift; cmd-restart; $@;;\n\tupdatecode)\t\t\t\t\t  shift; cmd-updatecode; $@;;\n\timages)\t\t\t\t\t      shift; cmd-images; $@;;\n\ttest)\t\t\t\t\t        shift; cmd-test; $@;;\n\t*)                    usage $@;;\n\tesac\n}\n\nmain \"$@\"\n"}}
