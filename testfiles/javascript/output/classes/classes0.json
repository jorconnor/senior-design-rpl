{
    "js.classes": {
        "pos": 1,
        "subs": [
            {
                "js.class_definition": {
                    "pos": 104,
                    "subs": [
                        {
                            "js.class_name": {
                                "pos": 110,
                                "text": "Rectangle "
                            }
                        }
                    ],
                    "text": "class Rectangle {"
                }
            },
            {
                "js.class_definition": {
                    "pos": 356,
                    "subs": [
                        {
                            "js.class_name": {
                                "pos": 362,
                                "text": "Point "
                            }
                        }
                    ],
                    "text": "class Point {"
                }
            },
            {
                "js.class_definition": {
                    "pos": 649,
                    "subs": [
                        {
                            "js.class_name": {
                                "pos": 655,
                                "text": "MyArray "
                            }
                        },
                        {
                            "js.class_name": {
                                "pos": 670,
                                "text": " Array "
                            }
                        }
                    ],
                    "text": "class MyArray extends Array {"
                }
            }
        ],
        "text": "// Examples captured from \"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes\"\n\nclass Rectangle {\n  constructor(height, width) {\n    this.height = height;\n    this.width = width;\n  }\n  \n  get area() {\n    return this.calcArea();\n  }\n\n  calcArea() {\n    return this.height * this.width;\n  }\n}\n\nconst square = new Rectangle(10, 10);\n\nclass Point {\n  constructor(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  static distance(a, b) {\n    const dx = a.x - b.x;\n    const dy = a.y - b.y;\n\n    return Math.sqrt(dx*dx + dy*dy);\n  }\n}\n\nconst p1 = new Point(5, 5);\nconst p2 = new Point(10, 10);\n\nconsole.log(Point.distance(p1, p2));\n\nclass MyArray extends Array {\n  // Overwrite species to the parent Array constructor\n  static get [Symbol.species]() { return Array; }\n}\n\nvar a = new MyArray(1,2,3);\nvar mapped = a.map(x => x * x);\n"
    }
}
