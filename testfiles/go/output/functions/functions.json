{"go.functions":{"pos":1,"text":"\/* This file is sourced under MIT license from siddontang\/go *\/\n\npackage rpc\n\nimport (\n\t\"container\/list\"\n\t\"fmt\"\n\t\"reflect\"\n\t\"sync\"\n)\n\ntype Client struct { \/\/ Client struct\n\tsync.Mutex\n\n\tnetwork string\n\taddr    string\n\n\tmaxIdleConns int\n\n\tconns *list.List\n}\n\n\/\/ MakeRpc function\nfunc MakeRpc(rpcName string, fptr interface{}) (err error) {\n\tdefer func() {\n\t\tif e := recover(); e != nil {\n\t\t\terr = fmt.Errorf(\"make rpc error\")\n\t\t}\n\t}()\n\n\tfn := reflect.ValueOf(fptr).Elem()\n\n\tnOut := fn.Type().NumOut()\n\tif nOut == 0 || fn.Type().Out(nOut-1).Kind() != reflect.Interface {\n\t\terr = fmt.Errorf(\"%s return final output param must be error interface\", rpcName)\n\t\treturn\n\t}\n\n\t_, b := fn.Type().Out(nOut - 1).MethodByName(\"Error\")\n\tif !b {\n\t\terr = fmt.Errorf(\"%s return final output param must be error interface\", rpcName)\n\t\treturn\n\t}\n\n\tf := func(in []reflect.Value) []reflect.Value {\n\t\treturn c.call(fn, rpcName, in)\n\t}\n\n\tv := reflect.MakeFunc(fn.Type(), f)\n\tfn.Set(v)\n\n\treturn\n}\n\n\/* Following functions are sourced under MIT license from brentp\/goleft *\/\n\nfunc pcheck(e error) {\n\tif e != nil {\n\t\tlog.Fatal(e)\n\t}\n}\n\nfunc min(a, b int) int {\n\tif a < b {\n\t\treturn a\n\t}\n\treturn b\n}\n\nfunc max(a, b int) int {\n\tif a > b {\n\t\treturn a\n\t}\n\treturn b\n}\n","subs":[{"go.function":{"pos":279,"text":"func MakeRpc(rpcName string, fptr interface{}) (err error)","subs":[{"go.func":{"pos":279,"text":"func "}},{"go.function_name":{"pos":284,"text":"MakeRpc"}},{"go.parameters":{"pos":291,"text":"(rpcName string, fptr interface{})","subs":[{"go.single_param":{"pos":292,"text":"rpcName string"}},{"go.single_param":{"pos":307,"text":" fptr interface{}"}}]}},{"go.return":{"pos":326,"text":"(err error)","subs":[{"go.single_return":{"pos":327,"text":"err error"}}]}}]}},{"go.function":{"pos":1050,"text":"func pcheck(e error) ","subs":[{"go.func":{"pos":1050,"text":"func "}},{"go.function_name":{"pos":1055,"text":"pcheck"}},{"go.parameters":{"pos":1061,"text":"(e error)","subs":[{"go.single_param":{"pos":1062,"text":"e error"}}]}}]}},{"go.function":{"pos":1109,"text":"func min(a, b int) ","subs":[{"go.func":{"pos":1109,"text":"func "}},{"go.function_name":{"pos":1114,"text":"min"}},{"go.parameters":{"pos":1117,"text":"(a, b int)","subs":[{"go.single_param":{"pos":1118,"text":"a"}},{"go.single_param":{"pos":1120,"text":" b int"}}]}}]}},{"go.function":{"pos":1173,"text":"func max(a, b int) ","subs":[{"go.func":{"pos":1173,"text":"func "}},{"go.function_name":{"pos":1178,"text":"max"}},{"go.parameters":{"pos":1181,"text":"(a, b int)","subs":[{"go.single_param":{"pos":1182,"text":"a"}},{"go.single_param":{"pos":1184,"text":" b int"}}]}}]}}]}}
